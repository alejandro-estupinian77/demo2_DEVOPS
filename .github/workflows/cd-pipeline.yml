name: CD - Deploy to Azure Container Apps

on:
  push:
    branches: [ master ]
  workflow_dispatch:

env:
  CONTAINER_APP_NAME: 'plataforma-edu'
  RESOURCE_GROUP: 'plataforma_edu'
  ACR_NAME: 'plataformaedu'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Enable ACR Admin Account
      run: |
        az acr update --name ${{ env.ACR_NAME }} --admin-enabled true

    - name: Login to Azure Container Registry
      run: |
        az acr login --name ${{ env.ACR_NAME }}

    - name: Build and Push Docker image
      run: |
        cd backend
        IMAGE_TAG=${{ env.ACR_NAME }}.azurecr.io/educativa-backend:${{ github.sha }}
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

    - name: Deploy to Container App with ACR Credentials
      run: |
        # Obtener credenciales del ACR
        ACR_USERNAME=$(az acr credential show --name ${{ env.ACR_NAME }} --query "username" -o tsv)
        ACR_PASSWORD=$(az acr credential show --name ${{ env.ACR_NAME }} --query "passwords[0].value" -o tsv)
        
        echo "Updating container app with new image..."
        az containerapp update \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --image ${{ env.IMAGE_TAG }} \
          --registry-server ${{ env.ACR_NAME }}.azurecr.io \
          --registry-username $ACR_USERNAME \
          --registry-password $ACR_PASSWORD

    - name: Configure Container Port
      run: |
        az containerapp update \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --set properties.template.containers[0].ports[0].port=5000

    - name: Get Application URL
      id: get-url
      run: |
        sleep 30  # Esperar que el deploy se complete
        URL=$(az containerapp show \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --query properties.configuration.ingress.fqdn \
          --output tsv)
        echo "url=$URL" >> $GITHUB_OUTPUT
        echo "Application URL: https://$URL"

    - name: Health Check
      run: |
        sleep 10
        URL="https://${{ steps.get-url.outputs.url }}"
        echo "Testing health endpoint: $URL/api/health"
        curl -f $URL/api/health || echo "Health check failed but continuing..."

    - name: ✅ Deployment Summary
      run: |
        echo "🎉 CD PIPELINE COMPLETED!"
        echo "🚀 Your app is LIVE in production!"
        echo "🌐 URL: https://${{ steps.get-url.outputs.url }}"
        echo "❤️ Health Check: https://${{ steps.get-url.outputs.url }}/api/health"
        echo "📚 Courses API: https://${{ steps.get-url.outputs.url }}/api/courses"
        echo "⏰ Deployed at: $(date)"
        echo "📝 Commit: ${{ github.sha }}"
        echo "🐳 Image: ${{ env.IMAGE_TAG }}"