name: CD - Deploy to Azure Container Apps

on:
  push:
    branches: [ master ]
  workflow_dispatch:

env:
  CONTAINER_APP_NAME: 'plataforma-edu'
  RESOURCE_GROUP: 'plataforma_edu'
  ACR_NAME: 'plataformaedu'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Login to Azure Container Registry
      run: |
        az acr login --name ${{ env.ACR_NAME }}

    - name: Build and Push Docker image
      run: |
        cd backend
        IMAGE_TAG=${{ env.ACR_NAME }}.azurecr.io/educativa-backend:${{ github.sha }}
        echo "Building image: $IMAGE_TAG"
        docker build -t $IMAGE_TAG .
        echo "Pushing image to ACR..."
        docker push $IMAGE_TAG
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

    - name: Enable Managed Identity
      run: |
        echo "Enabling managed identity for Container App..."
        az containerapp identity assign \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --system-assigned || echo "โ Identity already enabled"

    - name: ๐ Grant ACR Pull permissions
      run: |
        echo "Getting Principal ID..."
        PRINCIPAL_ID=$(az containerapp identity show \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --query principalId -o tsv)
        
        echo "Principal ID: $PRINCIPAL_ID"
        
        echo "Getting ACR resource ID..."
        ACR_ID=$(az acr show \
          --name ${{ env.ACR_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --query id -o tsv)
        
        echo "ACR ID: $ACR_ID"
        
        echo "Assigning AcrPull role..."
        az role assignment create \
          --assignee $PRINCIPAL_ID \
          --role AcrPull \
          --scope $ACR_ID || echo "โ Role already assigned"

    - name: ๐ง Configure Registry Credentials
      run: |
        echo "Configuring ACR credentials for Container App..."
        
        # Habilitar admin en el ACR si no estรก habilitado
        az acr update --name ${{ env.ACR_NAME }} --admin-enabled true
        
        # Obtener credenciales del ACR
        ACR_USERNAME=$(az acr credential show --name ${{ env.ACR_NAME }} --query username -o tsv)
        ACR_PASSWORD=$(az acr credential show --name ${{ env.ACR_NAME }} --query "passwords[0].value" -o tsv)
        
        # Configurar las credenciales del registry en el Container App
        az containerapp registry set \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --server ${{ env.ACR_NAME }}.azurecr.io \
          --username $ACR_USERNAME \
          --password $ACR_PASSWORD

    - name: ๐ Deploy to Container App
      run: |
        echo "Deploying new revision to Container App..."
        
        # Actualizar solo la imagen del contenedor backend
        az containerapp update \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --image ${{ env.IMAGE_TAG }} \
          --container-name educativa-backend

    - name: ๐ Get Application URL
      id: get-url
      run: |
        echo "Retrieving application URL..."
        URL=$(az containerapp show \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --query properties.configuration.ingress.fqdn \
          --output tsv)
        echo "url=$URL" >> $GITHUB_OUTPUT
        echo "โ Application URL: https://$URL"

    - name: โ Deployment Summary
      run: |
        echo "โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ"
        echo "๐  CD PIPELINE COMPLETED SUCCESSFULLY!"
        echo "โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ"
        echo ""
        echo "๐  Application Status: LIVE in Production"
        echo ""
        echo "๐  Application URL:"
        echo "    https://${{ steps.get-url.outputs.url }}"
        echo ""
        echo "๐  API Endpoints:"
        echo "    โค๏ธ  Health Check: https://${{ steps.get-url.outputs.url }}/api/health"
        echo "    ๐  Courses API:  https://${{ steps.get-url.outputs.url }}/api/courses"
        echo ""
        echo "๐  Deployment Info:"
        echo "    โฐ  Deployed at: $(date '+%Y-%m-%d %H:%M:%S UTC')"
        echo "    ๐  Commit SHA:  ${{ github.sha }}"
        echo "    ๐ท๏ธ   Short SHA:   ${GITHUB_SHA:0:7}"
        echo "    ๐ค  Triggered by: ${{ github.actor }}"
        echo "    ๐  Branch:      ${{ github.ref_name }}"
        echo ""
        echo "๐ณ  Container Image:"
        echo "    ${{ env.IMAGE_TAG }}"
        echo ""
        echo "โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ"