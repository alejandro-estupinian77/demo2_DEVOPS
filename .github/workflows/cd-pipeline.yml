name: CD - Deploy to Azure Container Apps

on:
  push:
    branches: [ master ]
  workflow_dispatch:  # ← Para poder ejecutarlo manualmente

env:
  CONTAINER_APP_NAME: 'plataforma-edu'
  RESOURCE_GROUP: 'plataforma_edu'
  CONTAINER_REGISTRY: 'plataformaedu.azurecr.io'  # ← Necesitas tu ACR

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # ← AGREGADO: Login al Container Registry
    - name: Login to Azure Container Registry
      run: |
        az acr login --name plataformaedu

    # ← CORREGIDO: Build y Push la imagen al ACR
    - name: Build and Push Docker image
      run: |
        cd backend
        IMAGE_TAG=${{ env.CONTAINER_REGISTRY }}/educativa-backend:${{ github.sha }}
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG
        echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

    # ← CORREGIDO: Deploy usando la imagen del ACR
    - name: 🚀 Deploy to Container App
      run: |
        az containerapp update \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --image ${{ env.IMAGE_TAG }}

    # ← ELIMINADO: Configure Container Port (esto se hace en la primera creación del Container App)

    - name: Get Application URL
      id: get-url
      run: |
        URL=$(az containerapp show \
          --name ${{ env.CONTAINER_APP_NAME }} \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --query properties.configuration.ingress.fqdn \
          --output tsv)
        echo "url=$URL" >> $GITHUB_OUTPUT
        echo "Application URL: https://$URL"

    - name: Verify Deployment
      run: |
        echo "✅ CD PIPELINE COMPLETED!"
        echo "🚀 Your app is LIVE in production!"
        echo "🌐 URL: https://${{ steps.get-url.outputs.url }}"
        echo "❤️ Health Check: https://${{ steps.get-url.outputs.url }}/api/health"
        echo "📚 Courses API: https://${{ steps.get-url.outputs.url }}/api/courses"
        echo "⏰ Deployed at: $(date)"
        echo "📝 Commit: ${{ github.sha }}"